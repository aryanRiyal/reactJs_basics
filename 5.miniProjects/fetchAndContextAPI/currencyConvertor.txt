Notes for currency converter app

https://github.com/hiteshchoudhary/chai-aur-react/blob/main/currency.md#notes-for-currency-converter-app

api link
https://github.com/fawazahmed0/exchange-api?tab=readme-ov-file

Example for Euro - 
let currency = 'eur';
let currencyURL = `https://cdn.jsdelivr.net/npm/@fawazahmed0/currency-api@latest/v1/currencies/${currency}.json`;

CustomHook - useCurrencyInfo()

<---- ---->

./src/components/InputBox.jsx
<input
	type="number"
	className="outline-none w-full bg-transparent py-1 5"
	placeholder="Amount"
	disabled={amountDisable}
	value={amount}
	onChange={(e) => onAmountChange && onAmountChange(Number(e.target.value))}
	/>

onChange={(e) => onAmountChange && onAmountChange(Number(e.target.value))}:

Checking onAmountChange with &&:
	-onAmountChange is likely a prop passed to the component.
	-Using onAmountChange && ensures:
		The function exists (i.e., it is not undefined or null) before calling it.
		This prevents runtime errors if onAmountChange is not provided.
	-If onAmountChange is not defined, the onChange handler will do nothing.

Why Use Number(e.target.value)?
	-e.target.value returns the input value as a string, even for numeric inputs.
	-Using Number converts the value to a numeric type, ensuring the onAmountChange function receives a number instead of a string.
	-This is essential when performing arithmetic or numeric validations on the input value.

<---- ---->

useId() - is a React Hook for generating unique IDs that can be passed to accessibility attributes.


<---- ---->

useState is showing unexpected behavior, if I use useEffect and cross update 4 states. I don't know the reason, need to be looked into